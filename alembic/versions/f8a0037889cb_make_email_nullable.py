"""make email nullable

Revision ID: f8a0037889cb
Revises: 069e6363029f
Create Date: 2025-08-23 08:47:50.097048

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f8a0037889cb'
down_revision: Union[str, Sequence[str], None] = '069e6363029f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tasks')
    op.drop_table('ai_suggestions')
    op.drop_table('userdb')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('userdb',
    sa.Column('username', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('userdb_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.PrimaryKeyConstraint('id', name='userdb_pkey'),
    sa.UniqueConstraint('email', name='userdb_email_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('username', name='userdb_username_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('ai_suggestions',
    sa.Column('suggestion_text', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], name=op.f('ai_suggestions_task_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('ai_suggestions_pkey'))
    )
    op.create_table('tasks',
    sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('descreption', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('priority', postgresql.ENUM('Low', 'Medium', 'High', name='priorityenum'), autoincrement=False, nullable=False),
    sa.Column('statue', postgresql.ENUM('Pending', 'InProgress', 'Completed', name='statueenum'), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['userdb.id'], name=op.f('tasks_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('tasks_pkey'))
    )
    # ### end Alembic commands ###
